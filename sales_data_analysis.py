# -*- coding: utf-8 -*-
"""sales data analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/187mRkXUNTpiFQmAADi9R_NSf6ML1GZ7p

# **Latar Belakang**

---
Dalam dunia bisnis makanan cepat saji, khususnya dalam industri pizza, analisis data penjualan memainkan peran penting. Keberhasilan suatu restoran pizza tidak hanya bergantung pada kualitas makanan yang mereka sajikan, tetapi juga pada bagaimana mereka memahami dan merespon tren penjualan serta preferensi pelanggan. Untuk membantu restoran pizza tetap kompetitif, analisis data penjualan memainkan peran penting dalam memahami pola penjualan dan memaksimalkan pendapatan.

# Table of Contents

---

* order_id: Pengidentifikasi unik untuk setiap pesanan yang dilakukan oleh tabel
* order_details_id: Pengidentifikasi unik untuk setiap pizza yang dilakukan dalam setiap pesanan (pizza dengan jenis dan ukuran yang sama disimpan dalam baris yang sama, dan jumlahnya bertambah)
* pizza_id: Pengidentifikasi kunci unik yang menghubungkan pizza yang dipesan dengan detailnya, seperti ukuran dan harga
* quantity: Jumlah yang dipesan untuk setiap pizza dengan jenis dan ukuran yang sama
* order_date: Tanggal pesanan dilakukan (dimasukkan ke dalam sistem sebelum dimasak & disajikan)
* order_time: Waktu pesanan dilakukan (dimasukkan ke dalam sistem sebelum dimasak & disajikan)
* unit_price: Harga pizza dalam USD
* total_price: unit_price * kuantitas
* pizza_size: Ukuran pizza (Kecil, Sedang, Besar, X Besar, atau XX Besar)
* pizza_type: Pengidentifikasi kunci unik yang menghubungkan pizza yang dipesan dengan detailnya, seperti ukuran dan harga
* pizza_ingredients: bahan-bahan yang digunakan dalam pizza seperti yang ditampilkan di menu (semuanya berisi Keju Mozzarella, meskipun tidak disebutkan; dan semuanya berisi Saus Tomat, kecuali jika ada saus lain yang disebutkan)
* pizza_name: Nama pizza seperti yang ditampilkan di menu

# **Contents**

---
1. Total Orderan Berdasarkan Jam, Hari, dan Bulan
2. Pendapatan Hasil Penjualan Per Bulan
3. Penjualan Berdasarkan Ukuran Pizza
4. Penjualan Berdasarkan Kategori Pizza
5. Pizza Names and Prices
6. Jumlah Pesanan Per Bulan Berdasarkan Hari
7. Waktu Pesanan Berdasarkan Tanggal Pesanan
8. Distribusi Pendapatan Berdasarkan Kategori dan Ukuran Pizza

# **IMPORTING LIBRARIES**
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

"""# **Loading Dataset**"""

df = pd.read_excel('Pizza_Sales.xlsx', header=0)
df.head()

"""# **EXPLORATORY DATA ANALYSIS**

---


"""

df.info()

df.shape

df.columns

df.isnull().sum()

df.describe()

"""# **Data Visualization**

---

**Total Orderan Berdasarkan Jam, Hari, dan Bulan**
"""

df['order_time']=df['order_time'].astype('string')
df[['Hour','Minute', 'Second']]= df['order_time'].str.split(":",expand=True)
df["Hour"].value_counts()

sns.countplot(data=df,x="Hour",palette="magma")
plt.xticks(rotation=90)
plt.xlabel("Hour",fontsize=10)
plt.ylabel("Total Orderan",fontsize=10)
plt.title("Total Order Berdasarkan Jam")
plt.show()

df['order_year'] =pd.DatetimeIndex( df['order_date']).year
df['order_year'].value_counts()

df['order_dates'] = df['order_date'].dt.day_name()
df['order_dates'].value_counts()

sns.countplot(data=df,x="order_dates",palette="winter")
plt.xticks(rotation=90)
plt.xlabel("Date",fontsize=10)
plt.ylabel("Total Orderan",fontsize=10)
plt.title("Total Order Harian")
plt.show()

df['order_month'] =pd.DatetimeIndex (df['order_date']).month
df.loc[(df['order_month'] ==1), 'order_month'] = 'January'
df.loc[(df['order_month'] ==2), 'order_month'] = 'February'
df.loc[(df['order_month'] ==3), 'order_month'] = 'March'
df.loc[(df['order_month'] ==4), 'order_month'] = 'April'
df.loc[(df['order_month'] ==5), 'order_month'] = 'May'
df.loc[(df['order_month'] ==6), 'order_month'] = 'June'
df.loc[(df['order_month'] ==7), 'order_month'] = 'July'
df.loc[(df['order_month'] ==8), 'order_month'] = 'August'
df.loc[(df['order_month'] ==9), 'order_month'] = 'September'
df.loc[(df['order_month'] ==10), 'order_month'] = 'October'
df.loc[(df['order_month'] ==11), 'order_month'] = 'November'
df.loc[(df['order_month'] ==12), 'order_month'] = 'December'
df['order_month'].value_counts()

sns.countplot(data=df,x="order_month",palette="mako")
plt.xticks(rotation=90)
plt.xlabel("Months",fontsize=10,color="black")
plt.ylabel("Total Order",fontsize=10,color="black")
plt.title("Total Order Bulanan",color="black")
plt.show()

df.pizza_id.value_counts()

fig, ax = plt.subplots(figsize=(18, 4))
sns.countplot(data=df,x="pizza_id",palette="rainbow",ax=ax)
plt.xticks(rotation=90)
plt.xlabel("Pizza Id",fontsize=10,color="black")
plt.title("PÄ°ZZA ID ",color="black")
plt.show()

"""**Pendapatan Hasil Penjualan Per Bulan**

---


"""

pendapatan_per_bulan = df.groupby(pd.to_datetime(df['order_date']).dt.strftime('%B'))['total_price'].sum()
pendapatan_per_bulan

plt.figure(figsize=(14,4))
plt.plot(pendapatan_per_bulan.index, pendapatan_per_bulan.values, color="blue")
plt.title('Pendapatan Per Bulan')
plt.xlabel("Bulan")
plt.ylabel("Pendapatan")
plt.grid()
plt.show()

"""**Penjualan Berdasarkan Ukuran Pizza**

---


"""

df.pizza_size.value_counts()

sns.countplot(data=df,x="pizza_size",palette="inferno")
plt.xticks(rotation=90)
plt.xlabel("pizza Size",fontsize=10)
plt.title("Pesanan Berdasarkan Ukuran")
plt.show()

labels = df["pizza_size"].value_counts().index
sizes = df["pizza_size"].value_counts()
plt.figure(figsize = (8,10))

colors = ['#ff9749','#66b3f1','#999f99','#ffcc09',"RED","cyan"]
plt.pie(sizes, labels=labels, rotatelabels=False, autopct='%1.1f%%',colors=colors, shadow=True, startangle=60,explode=(0,0,0,0,0.8))
plt.show()

"""**Penjualan Berdasarkan Kategori Pizza**

---


"""

df.pizza_category.value_counts()

sns.countplot(data=df,x="pizza_category",palette="Oranges_r")
plt.xticks(rotation=90)
plt.xlabel("Category",fontsize=10)
plt.title("Pesanan Berdasarkan Kategori Pizza")
plt.show()

labels = df["pizza_category"].value_counts().index
sizes = df["pizza_category"].value_counts()
colors = ['#ff9999','#66b3ff','#990f99','#ffcc89',"pink","yellow"]
plt.pie(sizes, labels=labels, rotatelabels=False, autopct='%1.1f%%',colors=colors, startangle=90)
plt.show()

"""**Pizza Names and Prices**

---


"""

df.pizza_name.value_counts()

# Membuat boxplot menggunakan Seaborn
plt.figure(figsize=(10, 6))  # Mengatur ukuran gambar
sns.boxplot(data=df, x='pizza_name', y='total_price', palette='Set3')

# Menambahkan label dan judul
plt.xlabel('Name', fontsize=12)
plt.ylabel('Price', fontsize=12)
plt.title('Pizza Names and Prices', fontsize=14, fontweight='bold')

# Rotasi label x untuk membuatnya lebih terbaca jika kategorinya banyak
plt.xticks(rotation=90)

# Tampilkan plot
plt.show()

"""**Jumlah Pesanan Per Bulan Berdasarkan Hari**

---


"""

with sns.axes_style('white'):
    g = sns.catplot(x="order_month", data=df, aspect=4.0, kind='count', hue='order_dates', palette="pastel")

# Menambahkan label sumbu
g.set_ylabels('Frequency')
g.set_xlabels("Months")

# Tampilkan plot
plt.show()

"""**Waktu Pesanan Berdasarkan Tanggal Pesanan**

---


"""

# Membuat crosstab dan plot
pd.crosstab(df["Hour"], df["order_dates"]).plot(
    kind="bar",
    figsize=(20, 6),
    color=["blue", "red", "green", "yellow", "magenta", "cyan", "black", "orange"]
)

# Menambahkan judul pada plot
plt.title("Waktu Pesanan Berdasarkan Tanggal Pesanan", fontsize=16, fontweight='bold')
plt.xticks(rotation=90)  # Mengatur rotasi label sumbu x jika perlu
plt.show()

"""**Distribusi Pendapatan Berdasarkan Kategori dan Ukuran Pizza**

---


"""

joint_data=df.sort_values(by='total_price', ascending=False)

top_rated=joint_data[:]
fig =px.sunburst(
    top_rated,
    path=['pizza_category',"pizza_size"],
    values='total_price',
    color='total_price')
fig.show()

df1 = df.groupby(["pizza_size","pizza_category"],as_index=False)[['total_price']].median().rename(columns={'total_price':'price'})
fig = px.treemap(df1, path = [px.Constant("all"), "pizza_size","pizza_category"],
                 values   ='price', color='pizza_size',
                 color_discrete_map={'(?)':'lightgrey', 'Lunch':'gold', 'Dinner':'darkblue'})
fig.update_layout(margin  = dict(t=50, l=25, r=25, b=25))
fig.show()

import matplotlib.pyplot as plt
from wordcloud import WordCloud # import the WordCloud object from the wordcloud module

text = ' '.join(df['pizza_ingredients'])

plt.rcParams['figure.figsize'] = (12,12)
wordcloud = WordCloud(background_color = 'black',colormap='vlag', width = 1200,  height = 1200, max_words = 121).generate(text)
plt.imshow(wordcloud)
plt.axis('off')
plt.show()
plt.show()

"""# **Result**

---
* Restoran biasanya paling ramai saat jam makan siang, terutama antara pukul 12 hingga 13.
* Jumlah pesanan meningkat terjadi pada hari Jumat.
* Pendapatan hasil penjualan paling tinggi di bulan July
* Penjualan pizza didominasi oleh ukuran L, yang menjadi ukuran paling populer di antara semua pilihan.
* Pesanan berdasarkan kategori pizza menunjukkan bahwa pizza klasik umumnya lebih disukai.
* Tomat, paprika merah, dan bawang merah biasanya ada di hampir semua jenis pizza.
* Meskipun toko pizza ini buka pukul 9, jumlah pesanan pada pukul 9 hampir tidak ada.
"""